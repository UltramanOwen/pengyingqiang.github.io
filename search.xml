<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[zeppelin]]></title>
      <url>http://pengyq.org/2016/03/19/zeppelin/</url>
      <content type="html"><![CDATA[<p>很久没更新博客了，今天给大家分享一个spark生态系统的成员——zeppelin，一个可以简单数据可视化，类似ipython notebook的工具。</p>
<h2 id="1-_u4E0B_u8F7D"><a href="#1-_u4E0B_u8F7D" class="headerlink" title="1.下载"></a>1.下载</h2><p>官网：<a href="https://zeppelin.incubator.apache.org/" target="_blank" rel="external">https://zeppelin.incubator.apache.org/</a><br><img src="http://7xp4nl.com1.z0.glb.clouddn.com/zeppelin1.png?imageView2/2/w/500/h/400/q/100" alt="zeppelin"><br>zeppelin源码托管于github,首先我们获取它的最新源码<br><a href="https://github.com/apache/incubator-zeppelin" target="_blank" rel="external">https://github.com/apache/incubator-zeppelin</a><br>博主下载的版本是0.6.0-incubating-SNAPSHOT</p>
<h2 id="2-__u7F16_u8BD1"><a href="#2-__u7F16_u8BD1" class="headerlink" title="2. 编译"></a>2. 编译</h2><p>环境准备：  </p>
<ul>
<li>maven </li>
<li>node   </li>
<li>npm<br>在zeppelin源码home目录下执行如下命令开始编译<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -Pbuild-distr  -Phadoop-<span class="number">2.6</span> -Pyarn -Pspark-<span class="number">1.5</span> -Dspark.version=<span class="number">1.5</span><span class="number">.1</span> -Ppyspark -DskipTests</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>编译注意事项：</p>
<p>  以上是摘要<br><a id="more"></a><br>  以下是余下全文</p>
<ol>
<li>注意maven package命令后面 的参数。选择合适自己的Hadoop和spark版本。</li>
<li>zeppelin可以支持多种数据源连接，0.6版本包含了对hive的支持，根据自己的实际情况考虑是否要修改<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#25105;&#36825;&#36793;&#20351;&#29992;&#30340;&#26159;hive 0.12&#25152;&#20197;&#20462;&#25913;&#19978;&#36848;&#37197;&#32622;&#25991;&#20214;&#10;3. maven&#23613;&#37327;&#36873;&#25321;&#22269;&#20869;&#30340;&#24211;&#65292;&#36825;&#26679;&#32534;&#35793;&#30340;&#26102;&#20505;&#19979;&#36733;&#30456;&#20851;jar&#20381;&#36182;&#36895;&#24230;&#24555;&#24456;&#22810;&#10;4. zeppelin web &#26159;node js&#24320;&#21457;&#30340;&#65292;&#23427;&#30340;&#20381;&#36182;&#31649;&#29702;&#24037;&#20855;```bower``` &#20063;&#21487;&#33021;&#36935;&#21040;&#19968;&#20123;&#19979;&#36733;&#20381;&#36182;&#32852;&#32593;&#22833;&#36133;&#30340;&#38382;&#39064;&#65292;&#25105;&#36825;&#37324;&#21152;&#19978;&#20102;&#20844;&#21496;&#30340;&#20195;&#29702;``` incubator-zeppelin-master\zeppelin-web\.bowerrc</span><br></pre></td></tr></table></figure></li>
</ol>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">directory</span>": <span class="value"><span class="string">"bower_components"</span></span>,</span><br><span class="line">  "<span class="attribute">json</span>": <span class="value"><span class="string">"bower.json"</span></span>,</span><br><span class="line">  "<span class="attribute">proxy</span>": <span class="value"><span class="string">"http://xxxx:8080"</span></span>,</span><br><span class="line">  "<span class="attribute">https-proxy</span>": <span class="value"><span class="string">"http://xxxx:8080"</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>除了遇到上面的情况，有些依赖托管雨Github 编译过程需要去github下载依赖源码出现网络连接不上.<br>这里有两个设置的地方,git 配置修改走http协议<figure class="highlight"><figcaption><span>config --global url."https://".insteadOf git://```环境变量加架上http代理```set HTTP_PROXY=http://xxx:8080```   </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#26368;&#32456;&#30340;&#32534;&#35793;&#32467;&#26524;&#22914;&#19979;&#65306;&#10;![zeppelin](http://7xp4nl.com1.z0.glb.clouddn.com/zeppelin2.png?imageView2/2/w/500/h/400/q/100)&#10;&#10;## 3. &#23433;&#35013;&#37197;&#32622;&#10;#### conf/zeppelin-env.sh</span><br></pre></td></tr></table></figure></li>
</ol>
<p>export JAVA_HOME=/data1/xxx/jdk<br>export MASTER=spark://xxxxx:7070<br>export SPARK_HOME=/data1/xxx/spark<br>export SPARK_APP_NAME=zeppelin<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#### conf/zeppelin-site.xml</span></span><br></pre></td></tr></table></figure></p>
<p><property><br>  <name>zeppelin.server.addr</name><br>  <value>0.0.0.0</value><br>  <description>Server address</description><br></property></p>
<p><property><br>  <name>zeppelin.server.port</name><br>  <value>8081</value><br>  <description>Server port.</description><br></property><br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">访问连接 ```http://hostname:</span><span class="number">8081</span><span class="escape">``</span><span class="escape">`即</span>可看到 <span class="escape">``</span><span class="escape">`z</span>eppelin<span class="escape">``</span><span class="escape">`的</span>主页</span><br><span class="line"></span><br><span class="line">## <span class="number">4</span>. Interpreter配置</span><br><span class="line">举例jdbc interpreter</span><br><span class="line">最好自己下载一些jdbc驱动放在<span class="escape">``</span><span class="escape">`z</span>eppelin/interpreter/jdbc/<span class="escape">``</span><span class="escape">`目</span>录下</span><br><span class="line">前面讲到还有个hive interpreter 其实有了jdbc interpreter都没必要存在了，因为其原理也是通过hive server的jdbc 接口连接查询数据。jdbc interpreter更通用一些</span><br><span class="line"></span><br><span class="line">注意连连hive的时候，要用hive server2，并且注意hive jdbc 等jar版本一致 。   </span><br><span class="line"></span><br><span class="line"><span class="escape">``</span><span class="escape">`h</span>ive --service hiveserver2 --hiveconf hive.server2.thrift.port=<span class="number">10003</span></span><br></pre></td></tr></table></figure></p>
<h2 id="5-__u4F7F_u7528_u793A_u4F8B"><a href="#5-__u4F7F_u7528_u793A_u4F8B" class="headerlink" title="5. 使用示例"></a>5. 使用示例</h2><p>执行spark程序并把结果存在临时内存表里，可以用sql语法对表进行统计分析<br><img src="http://7xp4nl.com1.z0.glb.clouddn.com/zeppeline3.png?imageView2/2/w/500/h/400/q/100" alt="zeppelin spark"><br>sql查询和可视化，类似于olap的简单操作<br><img src="http://7xp4nl.com1.z0.glb.clouddn.com/zeppelin4.png?imageView2/2/w/500/h/400/q/100" alt="zeppelin sql"><br>sql动态表单<br><img src="http://7xp4nl.com1.z0.glb.clouddn.com/zeppelin5.png?imageView2/2/w/500/h/400/q/100" alt="zeppelin sql"></p>
<p>report view<br><img src="http://7xp4nl.com1.z0.glb.clouddn.com/zeppelin6.png?imageView2/2/w/500/h/400/q/100" alt="zeppelin report view"></p>
<p>display html<br><img src="http://7xp4nl.com1.z0.glb.clouddn.com/zeppelin8.png?imageView2/2/w/500/h/400/q/100" alt="zeppelin display html"></p>
<p>display table<br><img src="http://7xp4nl.com1.z0.glb.clouddn.com/zeppelin9.png?imageView2/2/w/500/h/400/q/100" alt="zeppelin display table"></p>
<hr>
<h4 id="u5FAE_u4FE1_u626B_u4E0B_u9762_u7684_u4E8C_u7EF4_u7801_u83B7_u53D6_u66F4_u591A_u5E72_u8D27"><a href="#u5FAE_u4FE1_u626B_u4E0B_u9762_u7684_u4E8C_u7EF4_u7801_u83B7_u53D6_u66F4_u591A_u5E72_u8D27" class="headerlink" title="微信扫下面的二维码获取更多干货"></a>微信扫下面的二维码获取更多干货</h4><p><img src="http://7xp4nl.com1.z0.glb.clouddn.com/qrcode_for_gh_217533791e24_1280.jpg?imageView2/1/w/200/h/200/q/100" alt=""><br>微信搜索 databox</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何快速适应职场环境]]></title>
      <url>http://pengyq.org/2016/01/28/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E9%80%82%E5%BA%94%E8%81%8C%E5%9C%BA%E7%8E%AF%E5%A2%83/</url>
      <content type="html"><![CDATA[<p>换位思考了自己如果是新人，该如何快速融入环境，感触颇多。总结了一些自己的感悟，分享给大家！</p>
<h2 id="u5DE5_u4F5C_u4E60_u60EF"><a href="#u5DE5_u4F5C_u4E60_u60EF" class="headerlink" title="工作习惯"></a>工作习惯</h2><h4 id="1-__u65E5_u62A5"><a href="#1-__u65E5_u62A5" class="headerlink" title="1. 日报"></a>1. 日报</h4><p> 几乎所有新人都会经历一段写日报的日子。刚工作的时候自己也是很排斥这个事情，感觉天天写日报是一件很烦躁的事情。但是，现在想起来，日报确实很有必要。日报的目的是向导师或者领导反馈自己的成长，进步情况。最重要的是养成经常总结的习惯！IT行业不像其他行业，工作环境都是各自面对着自己的电脑。人和人之间的交流机会相对来说少了很多，经常会遇到的情况是，两个面对面坐着的人，都是用QQ或者RTX沟通O(∩_∩)O~。那么新人如何能够让自己目前的学习进度，和能力情况反馈给导师呢？那就是写日报了。日报一般分三个内容：1. 今天做了什么,进度如何？  2. 有哪些心得体会？  3. 后期计划？自己做新人的时候，最困惑的是第一点，日报就是每天发一次。其实每天做的事情不会太多，感觉没什么可写。现在站在导师的角度来看，其实最想看到的是，今天做了哪些事情，遇到什么困难，怎么解决的，结果怎么样？相信作为新人，困难一定不少吧。 接下来最重要的就是心得体会了。既然遇到了问题，一个解决方案，遇到一个坑，后期如何避免都是心得体会。再谈后期计划，所谓计划就是对未来工作的安排，这样讲起来有点虚。计划的重点在于。1. 大的问题，细化分解。  2. 时间预算（需要花费多长时间能够完成？，计划截止日期是什么时候，因为如果时间足够充裕，就没必要做计划），有了计划列表，每天日报滚动起来，回顾自己要做哪些事情，哪些事情优先级高。完成的百分比进度如何自然就很清晰！</p>
<h4 id="2-__u65F6_u95F4_u7BA1_u7406"><a href="#2-__u65F6_u95F4_u7BA1_u7406" class="headerlink" title="2. 时间管理"></a>2. 时间管理</h4><p> 学生的时候，学校有课程表，一切跟着老师节奏走。时间也充裕，每天的事情不多。但是到了工作环境，每天的事情，其实会安排的满满当当。每个人每天都有24小时。时间是一样多的。但是能做的事情，并不一样多。这中间的差距，就是时间管理能力。1. 时间概念，日报里有很重要的一项是后期计划。计划的一个重要因素就是时间管理问题。最重要的问题就是，当日事当日毕！拿日报来说，我非常不建议日报放在第二天发。写日报需要先回顾昨天做了什么事情。隔一晚后可能有些事情就会忘掉，其实早上时间本来就很短。写个日报，完事后差不多半天就过去了。每天有效时间几乎缩短了一半。想下如果把日报放在下班前些呢？1. 当天遇到的问题，和做的事情，记忆还深刻。总结日报的时候思路比较清晰。2. 晚上也相对安静一些，适合静下心思考并规划后续排期。关于排期的另一个比较重要的理论就是，四象限法则，从时间维度，分为紧急，不紧急。从重要性来讲，分为重要，不重要。这样事情的优先级就比较好确定了。然后，一件事一事的去处理就好。</p>
<h4 id="3-__u6C9F_u901A_u65B9_u5F0F"><a href="#3-__u6C9F_u901A_u65B9_u5F0F" class="headerlink" title="3. 沟通方式"></a>3. 沟通方式</h4><p> 前面提到的日报，其实也是沟通方式的一种，属于比较正式的一种。刚参加工作，可能会发现：RTX可以沟通，QQ也可以沟通，Email也可以沟通，电话也可以沟通。这么多沟通工具的选择和沟通技巧有哪些呢？前面提到的四象限法则原理一样，沟通除了分紧急不紧急外，还分正式，非正式。一般非正式问题，不紧急的RTX直接沟通，作为新人，需要和第三方沟通的时间建议带上导师RTX拉讨论组跟进，另外，RTX消息也是非常多的，不一定每个人都会回复，如果出现很久都没回复的，很有可能RTX消息被埋没了，那么问题沟通方式升级，可以打电话去确认。电话打过去没人接，可以看看是否在开会 或者去找人当面沟通。很多新人，经常会说”xxx没回复，xxx没接电话……”。这些理由都是无效的。1. 不是每个人都有精力看完所有RTX消息 2. 不要怕麻烦，怕打扰别人，因为这种情况，别人不处理完问题，自己的工作没法进展！另外，还需要注意的是，沟通效率，无论RTX沟通或者电话沟通，首先要让对方清楚的了解自己描述的问题。问题描述，多想想言简意赅，清楚的表达问题。禁忌“那段代码..”，之类的问题，让别人还要反问“到底是哪段?”的问题。学会换位思考，站在别人角度，看看自己的表达是否容易理解。遇到问题，千万不要自己一个人在死磕、耗时间！发现没有思路的，就赶快请教身边同事，向别人请教不可耻，这一点非常重要。另外正式的事情，RTX沟通好之后，邮件同步结果。正式的事情，格式也应该正式。文字字体，颜色都要有规范，不应该选一些很花哨的字体，最终可能导致自己敲错字母，也难以发现。比如h和b的问题。邮件发出之前，记得检查错别字，有附件的是否带上附件？等细节问题。了解这些潜规则的途径之一，通过搜索引擎搜索” 办公礼仪”，了解这些小细节之后，在自己的习惯中落实下来！</p>
<h2 id="u4E13_u4E1A_u6280_u80FD_u63D0_u5347"><a href="#u4E13_u4E1A_u6280_u80FD_u63D0_u5347" class="headerlink" title="专业技能提升"></a>专业技能提升</h2><h4 id="1-__u64CD_u4F5C_u6280_u80FD"><a href="#1-__u64CD_u4F5C_u6280_u80FD" class="headerlink" title="1. 操作技能"></a>1. 操作技能</h4><p> 在IT行业，是一个对动手操作能力要求比较高的行业。我们的生产工具是电脑。电脑是提升人类生产水平的工具。那么该如何用好这个工具呢？1. 操作系统熟练程度，对于大部分新人来说，操作电脑的能力还是比较差的，无论是数量程度还是对计算机的了解程度，关于这个方面能力的提升，自己可以在网上搜集一些电脑办公操作技巧之类的文章多看，多练习。2. 软件操作，一如IT深似海，软件堆积如山高。是的，看别的同事操作的时候，动作那么流畅，效率那么高，其实离不开自己喜欢的一套辅助工具。这些辅助工具各司其职，最终组合成自己的开发办公环境。比如文本编辑sublime text、notepad++ 文档总结工具excel，word，ppt。快速了解各个工具使用情况的技巧就是，和前辈们去请教，看看那些工具比较好用，然后自己体验后选择合适自己的，去把它用熟练！另外，新人和新人多相互交流，相互的学习经验可以相互学习，成长更快！闭门造车，很难取得进步。</p>
<h4 id="2-__u7406_u8BBA_u77E5_u8BC6"><a href="#2-__u7406_u8BBA_u77E5_u8BC6" class="headerlink" title="2. 理论知识"></a>2. 理论知识</h4><p> 这块主要的问题在于，认识清楚自己缺哪些知识，哪些知识是最迫切需要掌握的。然后去找学习资料，安排自己的知识补齐计划。和在学校不同的是，工作后学习完全靠自己，资料查找能力，和理解能力是非常重要的。学会应用搜索引擎，和一些论坛博客。想信会有很多教程视频、书籍、博客帮助自己成长。善于发现学习资料的同事，要真正理解其中的内容。比如对比学习。方案A好 好在哪里，方案B不好，不好在哪里。什么场景选择A 什么场景选择B。类似的思路，多一些总结和思考。技术类书，能找到电子版的建议下载电子版的看。新人要学的知识太多，电子版的书可以节省很多费用，放在网盘里，便于查阅!另外，一些笔记软件，例如印象笔记、有道笔记、为知笔记，可以用来收集知识。这些工具可以全平台同步，便于随时查阅，回顾。</p>
<h4 id="3-__u4E1A_u52A1_u7406_u89E3"><a href="#3-__u4E1A_u52A1_u7406_u89E3" class="headerlink" title="3. 业务理解"></a>3. 业务理解</h4><p> 除了编程，或者计算机能力外。工作更多的是理解业务，这样可以搞清楚需求发起的原因。这块主要是知识梳理，结合自己的工作任务，多考虑这个需求的目的是什么？作为开发同学，一定要考虑的比提需求的同学考虑的多。因为在这个领域，自己才是最专业的。千万避免需求说是什么，自己只做什么。挤牙膏的态度，很容易导致简单的需求，重复返工。工作效率比较低！知识梳理的方法，1. 分层 2. 分类 3. 梳理逻辑关系。这个思路有助于了解清楚业务知识体系！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[数学公式符号扫盲]]></title>
      <url>http://pengyq.org/2016/01/24/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E7%AC%A6%E5%8F%B7%E6%89%AB%E7%9B%B2/</url>
      <content type="html"><![CDATA[<h3 id="1-__u51E0_u4F55_u7B26_u53F7"><a href="#1-__u51E0_u4F55_u7B26_u53F7" class="headerlink" title="1. 几何符号"></a>1. 几何符号</h3><pre><code>⊥   ∥   ∠   ⌒   ⊙   ≡   ≌    △
</code></pre><h3 id="2-__u4EE3_u6570_u7B26_u53F7"><a href="#2-__u4EE3_u6570_u7B26_u53F7" class="headerlink" title="2. 代数符号"></a>2. 代数符号</h3><pre><code>∝   ∧   ∨   ～   ∫   ≠    ≤   ≥   ≈   ∞   ∶
</code></pre><h3 id="3-__u8FD0_u7B97_u7B26_u53F7"><a href="#3-__u8FD0_u7B97_u7B26_u53F7" class="headerlink" title="3. 运算符号"></a>3. 运算符号</h3><pre><code>如加号（＋），减号（－），乘号（×或·），除号（÷或／）
两个集合的并集（∪），交集（∩），根号（√）
对数（log，lg，ln），比（：）
微分（dx），积分（∫），曲线积分（∮）等。
</code></pre><h3 id="4-__u96C6_u5408_u7B26_u53F7"><a href="#4-__u96C6_u5408_u7B26_u53F7" class="headerlink" title="4. 集合符号"></a>4. 集合符号</h3><pre><code>∪   ∩   ∈
</code></pre><p>  以上是摘要<br><a id="more"></a><br>  以下是余下全文</p>
<h3 id="5-__u7279_u6B8A_u7B26_u53F7"><a href="#5-__u7279_u6B8A_u7B26_u53F7" class="headerlink" title="5. 特殊符号"></a>5. 特殊符号</h3><pre><code>∑    π（圆周率）
</code></pre><h3 id="6-__u63A8_u7406_u7B26_u53F7"><a href="#6-__u63A8_u7406_u7B26_u53F7" class="headerlink" title="6. 推理符号"></a>6. 推理符号</h3><pre><code>|a|    ⊥    ∽    △    ∠    ∩    ∪    ≠    ≡    ±    ≥    ≤    ∈    
←   ↑    →    ↓    ↖    ↗    ↘    ↙    ∥    ∧    ∨   &amp;;   §
①   ②   ③   ④   ⑤   ⑥   ⑦   ⑧   ⑨   ⑩
Γ    Δ    Θ     Λ    Ξ    Ο    Π     Σ    Φ     Χ    Ψ    Ω
α    β    γ    δ    ε    ζ    η    θ    ι    κ    λ    μ     ν
ξ    ο    π    ρ    σ    τ    υ    φ    χ    ψ    ω
Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ Ⅷ Ⅸ Ⅹ Ⅺ Ⅻ
ⅰ ⅱ ⅲ ⅳ ⅴ ⅵ ⅶ ⅷ ⅸ ⅹ
∈   ∏   ∑   ∕   √   ∝   ∞   ∟ ∠    ∣   ∥   ∧   ∨   ∩   ∪   ∫   ∮
∴   ∵   ∶   ∷   ∽   ≈   ≌   ≒   ≠   ≡   ≤   ≥   ≦   ≧    ≮   ≯   ⊕   ⊙    ⊥
⊿   ⌒     ℃
</code></pre><p>　　指数0123：o123</p>
<h3 id="7-__u6570_u91CF_u7B26_u53F7"><a href="#7-__u6570_u91CF_u7B26_u53F7" class="headerlink" title="7. 数量符号"></a>7. 数量符号</h3><pre><code>如：i，2+i，a，x，自然对数底e，圆周率π。
</code></pre><h3 id="8-__u5173_u7CFB_u7B26_u53F7"><a href="#8-__u5173_u7CFB_u7B26_u53F7" class="headerlink" title="8. 关系符号"></a>8. 关系符号</h3><pre><code>如“＝”是等号，“≈”是近似符号，“≠”是不等号，“＞”是大于符号，“＜”是小于符号
“≥”是大于或等于符号（也可写作“≮”），“≤”是小于或等于符号（也可写作“≯”）
“→ ”表示变量变化的趋势，“∽”是相似符号，“≌”是全等号，“∥”是平行符号，“⊥”是垂直符号
“∝”是成正比符号，（没有成反比符号，但可以用成正比符号配倒数当作成反比）
“∈”是属于符号，“??”是“包含”符号等。
</code></pre><h3 id="9-__u7ED3_u5408_u7B26_u53F7"><a href="#9-__u7ED3_u5408_u7B26_u53F7" class="headerlink" title="9. 结合符号"></a>9. 结合符号</h3><pre><code>如小括号“（）”中括号“［］”，大括号“｛｝”横线“—”
</code></pre><h3 id="10-__u6027_u8D28_u7B26_u53F7"><a href="#10-__u6027_u8D28_u7B26_u53F7" class="headerlink" title="10. 性质符号"></a>10. 性质符号</h3><pre><code>如正号“＋”，负号“－”，绝对值符号“| |”正负号“±”
</code></pre><h3 id="11-__u7701_u7565_u7B26_u53F7"><a href="#11-__u7701_u7565_u7B26_u53F7" class="headerlink" title="11. 省略符号"></a>11. 省略符号</h3><pre><code>如三角形（△），直角三角形（Rt△），正弦（sin），余弦（cos）
x的函数（f(x)），极限（lim），角（∠）
∵因为，（一个脚站着的，站不住）
∴所以，（两个脚站着的，能站住） 
总和（∑），连乘（∏）
从n个元素中每次取出r个元素所有不同的组合数（C(r)(n) ）
幂（A，Ac，Aq，x^n）等。
</code></pre><h3 id="12-__u6392_u5217_u7EC4_u5408_u7B26_u53F7"><a href="#12-__u6392_u5217_u7EC4_u5408_u7B26_u53F7" class="headerlink" title="12. 排列组合符号"></a>12. 排列组合符号</h3><pre><code>C-组合数
A-排列数
N-元素的总个数
R-参与选择的元素个数
!-阶乘 ，如5！=5×4×3×2×1=120
C-Combination- 组合
A-Arrangement-排列
</code></pre><h3 id="13-__u79BB_u6563_u6570_u5B66_u7B26_u53F7"><a href="#13-__u79BB_u6563_u6570_u5B66_u7B26_u53F7" class="headerlink" title="13. 离散数学符号"></a>13. 离散数学符号</h3><pre><code>├ 断定符（公式在L中可证）
╞ 满足符（公式在E上有效，公式在E上可满足）
┐ 命题的“非”运算
∧ 命题的“合取”（“与”）运算
∨ 命题的“析取”（“或”，“可兼或”）运算
→ 命题的“条件”运算
A&lt;=&gt;B 命题A 与B 等价关系
A=&gt;B 命题 A与 B的蕴涵关系
A* 公式A 的对偶公式
wff 合式公式
iff 当且仅当
↑ 命题的“与非” 运算（ “与非门” ）
↓ 命题的“或非”运算（ “或非门” ）
□ 模态词“必然”
◇ 模态词“可能”
φ 空集
∈ 属于（??不属于）
P（A） 集合A的幂集
|A| 集合A的点数
R^2=R○R [R^n=R^(n-1)○R] 关系R的“复合”
（或下面加 ≠） 真包含
∪ 集合的并运算
∩ 集合的交运算
- （～） 集合的差运算
〡 限制
[X](右下角R) 集合关于关系R的等价类
A/ R 集合A上关于R的商集
[a] 元素a 产生的循环群
I (i大写) 环，理想
Z/(n) 模n的同余类集合
r(R) 关系 R的自反闭包
s(R) 关系 的对称闭包
CP 命题演绎的定理（CP 规则）
EG 存在推广规则（存在量词引入规则）
ES 存在量词特指规则（存在量词消去规则）
UG 全称推广规则（全称量词引入规则）
US 全称特指规则（全称量词消去规则）
R 关系
r 相容关系
R○S 关系 与关系 的复合
domf 函数 的定义域（前域）
ranf 函数 的值域
f:X→Y f是X到Y的函数
GCD(x,y) x,y最大公约数
LCM(x,y) x,y最小公倍数
aH(Ha) H 关于a的左（右）陪集
Ker(f) 同态映射f的核（或称 f同态核）
[1，n] 1到n的整数集合
d(u,v) 点u与点v间的距离
d(v) 点v的度数
G=(V,E) 点集为V，边集为E的图
W(G) 图G的连通分支数
k(G) 图G的点连通度
△（G) 图G的最大点度
A(G) 图G的邻接矩阵
P(G) 图G的可达矩阵
M(G) 图G的关联矩阵
C 复数集
N 自然数集（包含0在内）
N* 正自然数集
P 素数集
Q 有理数集
R 实数集
Z 整数集
Set 集范畴
Top 拓扑空间范畴
Ab 交换群范畴
Grp 群范畴
Mon 单元半群范畴
Ring 有单位元的（结合）环范畴
Rng 环范畴
CRng 交换环范畴
R-mod 环R的左模范畴
mod-R 环R的右模范畴
Field 域范畴
Poset 偏序集范畴
</code></pre><hr>
<h3 id="u4E0A_u8FF0_u7B26_u53F7_u6240_u8868_u793A_u7684_u610F_u4E49_u548C_u8BFB_u6CD5_uFF08_u4E2D_u82F1_u6587_u53C2_u7167_uFF09"><a href="#u4E0A_u8FF0_u7B26_u53F7_u6240_u8868_u793A_u7684_u610F_u4E49_u548C_u8BFB_u6CD5_uFF08_u4E2D_u82F1_u6587_u53C2_u7167_uFF09" class="headerlink" title="上述符号所表示的意义和读法（中英文参照）"></a>上述符号所表示的意义和读法（中英文参照）</h3><pre><code>＋  plus 加号；正号
－  minus 减号；负号
±   plus or minus 正负号
×   is multiplied by 乘号
÷   is divided by 除号
＝  is equal to 等于号
≠   is not equal to 不等于号
≡   is equivalent to 全等于号
≌  is approximately equal to 约等于
≈  is approximately equal to 约等于号
＜  is less than 小于号
＞  is more than 大于号
≤  is less than or equal to 小于或等于
≥  is more than or equal to 大于或等于
％  per cent 百分之…
∞  infinity 无限大号
√  (square) root 平方根
X squared X的平方
X cubed X的立方
∵ since; because 因为
∴ hence 所以
∠ angle 角
⌒ semicircle 半圆
⊙ circle 圆
○  circumference 圆周
△ triangle 三角形
⊥ perpendicular to 垂直于
∪ intersection of 并，合集
∩  union of 交，通集
∫  the integral of …的积分
∑  (sigma) summation of 总和
°  degree 度
′  minute 分
〃  second 秒
＃  number …号
＠  at 单价
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[R数据挖掘常用包汇总]]></title>
      <url>http://pengyq.org/2015/12/22/R%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%B8%B8%E7%94%A8%E5%8C%85%E6%B1%87%E6%80%BB/</url>
      <content type="html"><![CDATA[<p>下面列出了可用于数据挖掘的R包和函数的集合。其中一些不是专门为了数据挖掘而开发，但数据挖掘过程中这些包能帮我们不少忙，所以也包含进来。</p>
<ol>
<li><p>聚类<br>常用的包： fpc，cluster，pvclust，mclust<br>基于划分的方法: kmeans, pam, pamk, clara<br>基于层次的方法: hclust, pvclust, agnes, diana<br>基于模型的方法: mclust<br>基于密度的方法: dbscan<br>基于画图的方法: plotcluster, plot.hclust<br>基于验证的方法: cluster.stats</p>
</li>
<li><p>分类<br>常用的包：<br>rpart，party，randomForest，rpartOrdinal，tree，marginTree，<br>maptree，survival<br>决策树: rpart, ctree<br>随机森林: cforest, randomForest<br>回归, Logistic回归, Poisson回归: glm, predict, residuals<br>生存分析: survfit, survdiff, coxph</p>
<p>以上是摘要</p>
<a id="more"></a>
<p>以下是余下全文</p>
</li>
<li><p>关联规则与频繁项集<br>常用的包：<br>arules：支持挖掘频繁项集，最大频繁项集，频繁闭项目集和关联规则<br>DRM：回归和分类数据的重复关联模型</p>
</li>
</ol>
<p>APRIORI算法，广度RST算法：apriori, drm<br>ECLAT算法： 采用等价类，RST深度搜索和集合的交集： eclat</p>
<ol>
<li><p>序列模式<br>常用的包： arulesSequences<br>SPADE算法： cSPADE</p>
</li>
<li><p>时间序列<br>常用的包： timsac<br>时间序列构建函数： ts<br>成分分解: decomp, decompose, stl, tsr</p>
</li>
<li><p>统计<br>常用的包： Base R, nlme<br>方差分析: aov, anova<br>密度分析: density<br>假设检验: t.test, prop.test, anova, aov<br>线性混合模型：lme<br>主成分分析和因子分析：princomp</p>
</li>
<li><p>图表<br>条形图: barplot<br>饼图: pie<br>散点图: dotchart<br>直方图: hist<br>密度图: densityplot<br>蜡烛图, 箱形图 boxplot<br>QQ (quantile-quantile) 图: qqnorm, qqplot, qqline<br>Bi-variate plot: coplot<br>树: rpart<br>Parallel coordinates: parallel, paracoor, parcoord<br>热图, contour: contour, filled.contour<br>其他图: stripplot, sunflowerplot, interaction.plot, matplot, fourfoldplot,<br>assocplot, mosaicplot<br>保存的图表格式: pdf, postscript, win.metafile, jpeg, bmp, png</p>
</li>
<li><p>数据操作<br>缺失值：na.omit<br>变量标准化：scale<br>变量转置：t<br>抽样：sample<br>堆栈：stack, unstack<br>其他：aggregate, merge, reshape</p>
</li>
<li><p>与数据挖掘软件Weka做接口<br>RWeka: 通过这个接口，可以在R中使用Weka的所有算法。</p>
</li>
</ol>
<hr>
<h3 id="u8FDE_u7EED_u56E0_u53D8_u91CF_u7684_u9884_u6D4B_uFF1A"><a href="#u8FDE_u7EED_u56E0_u53D8_u91CF_u7684_u9884_u6D4B_uFF1A" class="headerlink" title="连续因变量的预测："></a>连续因变量的预测：</h3><p><code>stats</code>包<br><code>lm</code>函数，实现多元线性回归</p>
<p><code>stats</code>包<br><code>glm</code>函数，实现广义线性回归</p>
<p><code>stats</code>包<br><code>nls</code>函数，实现非线性最小二乘回归</p>
<p><code>rpart</code>包<br><code>rpart</code>函数，基于CART算法的分类回归树模型</p>
<p><code>RWeka</code>包<br><code>M5P</code>函数，模型树算法，集线性回归和CART算法的优点</p>
<p><code>adabag</code>包<br><code>bagging</code>函数，基于<code>rpart</code>算法的集成算法</p>
<p><code>adabag</code>包<br><code>boosting</code>函数，基于<code>rpart</code>算法的集成算法</p>
<p><code>randomForest</code>包<br><code>randomForest</code>函数，基于<code>rpart</code>算法的集成算法</p>
<p><code>e1071</code>包<br><code>svm</code>函数，支持向量机算法</p>
<p><code>kernlab</code>包<br><code>ksvm</code>函数，基于核函数的支持向量机</p>
<p><code>nnet</code>包<br><code>nnet</code>函数，单隐藏层的神经网络算法</p>
<p><code>neuralnet</code>包<br><code>neuralnet</code>函数，多隐藏层多节点的神经网络算法</p>
<p><code>RSNNS</code>包<br><code>mlp</code>函数，多层感知器神经网络</p>
<p><code>RSNNS</code>包<br><code>rbf</code>函数，基于径向基函数的神经网络</p>
<h3 id="u79BB_u6563_u56E0_u53D8_u91CF_u7684_u5206_u7C7B_uFF1A"><a href="#u79BB_u6563_u56E0_u53D8_u91CF_u7684_u5206_u7C7B_uFF1A" class="headerlink" title="离散因变量的分类："></a>离散因变量的分类：</h3><p><code>stats</code>包<br><code>glm</code>函数，实现Logistic回归，选择logit连接函数</p>
<p><code>stats</code>包<br><code>knn</code>函数，k最近邻算法</p>
<p><code>kknn</code>包<br><code>kknn</code>函数，加权的k最近邻算法</p>
<p><code>rpart</code>包<br><code>rpart</code>函数，基于CART算法的分类回归树模型</p>
<p><code>adabag</code>包<br><code>bagging</code>函数，基于rpart算法的集成算法</p>
<p><code>adabag</code>包<br><code>boosting</code>函数，基于rpart算法的集成算法</p>
<p><code>randomForest</code>包<br><code>randomForest</code>函数，基于rpart算法的集成算法</p>
<p><code>party</code>包<br><code>ctree</code>函数，条件分类树算法</p>
<p><code>RWeka</code>包<br><code>OneR</code>函数，一维的学习规则算法</p>
<p><code>RWeka</code>包<br><code>JPip</code>函数，多维的学习规则算法</p>
<p><code>RWeka</code>包<br><code>J48</code>函数，基于C4.5算法的决策树</p>
<p><code>C50</code>包<br><code>C5.0</code>函数，基于C5.0算法的决策树</p>
<p><code>e1071</code>包<br><code>svm</code>函数，支持向量机算法</p>
<p><code>kernlab</code>包<br><code>ksvm</code>函数，基于核函数的支持向量机</p>
<p><code>e1071</code>包<br><code>naiveBayes</code>函数，贝叶斯分类器算法</p>
<p><code>klaR</code>包<br><code>NaiveBayes</code>函数，贝叶斯分类器算分</p>
<p><code>MASS</code>包<br><code>lda</code>函数，线性判别分析</p>
<p><code>MASS</code>包<br><code>qda</code>函数，二次判别分析</p>
<p><code>nnet</code>包<br><code>nnet</code>函数，单隐藏层的神经网络算法</p>
<p><code>RSNNS</code>包<br><code>mlp</code>函数，多层感知器神经网络</p>
<p><code>RSNNS</code>包<br><code>rbf</code>函数，基于径向基函数的神经网络</p>
<h3 id="u805A_u7C7B_uFF1A"><a href="#u805A_u7C7B_uFF1A" class="headerlink" title="聚类："></a>聚类：</h3><p><code>Nbclust</code>包<br><code>Nbclust</code>函数可以确定应该聚为几类</p>
<p><code>stats</code>包<br><code>kmeans</code>函数，k均值聚类算法</p>
<p><code>cluster</code>包<br><code>pam</code>函数，k中心点聚类算法</p>
<p><code>stats</code>包<br><code>hclust</code>函数，层次聚类算法</p>
<p><code>fpc</code>包<br><code>dbscan</code>函数，密度聚类算法</p>
<p><code>fpc</code>包<br><code>kmeansruns</code>函数，相比于kmeans函数更加稳定，而且还可以估计聚为几类</p>
<p><code>fpc</code>包<br><code>pamk</code>函数，相比于<code>pam</code>函数，可以给出参考的聚类个数</p>
<p><code>mclust</code>包<br><code>Mclust</code>函数，期望最大（EM）算法</p>
<h3 id="u5173_u8054_u89C4_u5219_uFF1A"><a href="#u5173_u8054_u89C4_u5219_uFF1A" class="headerlink" title="关联规则："></a>关联规则：</h3><p><code>arules</code>包<br><code>apriori</code>函数，Apriori关联规则算法</p>
<p>参考文献:<a href="http://www.douban.com/note/262946137/" target="_blank" rel="external">http://www.douban.com/note/262946137/</a></p>
<hr>
<h4 id="u5FAE_u4FE1_u626B_u4E0B_u9762_u7684_u4E8C_u7EF4_u7801_u83B7_u53D6_u66F4_u591A_u5E72_u8D27"><a href="#u5FAE_u4FE1_u626B_u4E0B_u9762_u7684_u4E8C_u7EF4_u7801_u83B7_u53D6_u66F4_u591A_u5E72_u8D27" class="headerlink" title="微信扫下面的二维码获取更多干货"></a>微信扫下面的二维码获取更多干货</h4><p><img src="http://7xp4nl.com1.z0.glb.clouddn.com/qrcode_for_gh_217533791e24_1280.jpg?imageView2/1/w/200/h/200/q/100" alt=""><br>微信搜索 databox</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python pandas]]></title>
      <url>http://pengyq.org/2015/12/14/python-pandas/</url>
      <content type="html"><![CDATA[<html><br><body style="margin:0"><br><iframe src="http://nbviewer.ipython.org/github/pengyq/pandas_share/blob/master/pandas_demo.ipynb" style="width:100%;height:700px;border:0px" target="_parent"></iframe><br></body><br></html>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python爬虫框架Scrapy]]></title>
      <url>http://pengyq.org/2015/12/13/python%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6Scrapy%E5%85%A5%E9%97%A8demo/</url>
      <content type="html"><![CDATA[<ol>
<li><p>安装Scrapy</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo pip install Scrapy</span><br></pre></td></tr></table></figure>
<p> 在安装过程中出现如下错误:</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Installing collected packages: six, w3lib, lxml, Twisted, characteristic, pyasn1, pyasn1-modules, service-identity, scrapy</span><br><span class="line">  Found existing installation: six <span class="number">1.4</span>.<span class="number">1</span></span><br><span class="line">    DEPRECATION: Uninstalling <span class="tag">a</span> distutils installed project (six) has been deprecated and will be removed <span class="keyword">in</span> <span class="tag">a</span> future version. This is due to the fact that uninstalling <span class="tag">a</span> distutils project will only partially uninstall the project.</span><br><span class="line">    Uninstalling six-<span class="number">1.4</span>.<span class="number">1</span>:</span><br><span class="line">Exception:</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"/Library/Python/2.7/site-packages/pip/basecommand.py"</span>, line <span class="number">211</span>, <span class="keyword">in</span> main</span><br><span class="line">    status = self.<span class="function"><span class="title">run</span><span class="params">(options, args)</span></span></span><br><span class="line">  File <span class="string">"/Library/Python/2.7/site-packages/pip/commands/install.py"</span>, line <span class="number">311</span>, <span class="keyword">in</span> run</span><br><span class="line">    root=options<span class="class">.root_path</span>,</span><br><span class="line">  File <span class="string">"/Library/Python/2.7/site-packages/pip/req/req_set.py"</span>, line <span class="number">640</span>, <span class="keyword">in</span> install</span><br><span class="line">    requirement.<span class="function"><span class="title">uninstall</span><span class="params">(auto_confirm=True)</span></span></span><br><span class="line">  File <span class="string">"/Library/Python/2.7/site-packages/pip/req/req_install.py"</span>, line <span class="number">716</span>, <span class="keyword">in</span> uninstall</span><br><span class="line">    paths_to_remove.<span class="function"><span class="title">remove</span><span class="params">(auto_confirm)</span></span></span><br><span class="line">  File <span class="string">"/Library/Python/2.7/site-packages/pip/req/req_uninstall.py"</span>, line <span class="number">125</span>, <span class="keyword">in</span> remove</span><br><span class="line">    <span class="function"><span class="title">renames</span><span class="params">(path, new_path)</span></span></span><br><span class="line">  File <span class="string">"/Library/Python/2.7/site-packages/pip/utils/__init__.py"</span>, line <span class="number">315</span>, <span class="keyword">in</span> renames</span><br><span class="line">    shutil.<span class="function"><span class="title">move</span><span class="params">(old, new)</span></span></span><br><span class="line">  File <span class="string">"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py"</span>, line <span class="number">302</span>, <span class="keyword">in</span> move</span><br><span class="line">    <span class="function"><span class="title">copy2</span><span class="params">(src, real_dst)</span></span></span><br><span class="line">  File <span class="string">"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py"</span>, line <span class="number">131</span>, <span class="keyword">in</span> copy2</span><br><span class="line">    <span class="function"><span class="title">copystat</span><span class="params">(src, dst)</span></span></span><br><span class="line">  File <span class="string">"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py"</span>, line <span class="number">103</span>, <span class="keyword">in</span> copystat</span><br><span class="line">    os.<span class="function"><span class="title">chflags</span><span class="params">(dst, st.st_flags)</span></span></span><br><span class="line">OSError: [Errno <span class="number">1</span>] Operation not permitted: <span class="string">'/tmp/pip-4OOWnv-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/six-1.4.1-py2.7.egg-info'</span></span><br></pre></td></tr></table></figure>
<p> 可以看到Scrapy安装想要卸载掉six包，而产生的错误，所以应该让pip安装的时候忽略six包，该用下面的命令:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install scrapy --ingnore-installed six</span><br></pre></td></tr></table></figure>
<p>以上是摘要</p>
<a id="more"></a>
<p>以下是余下全文</p>
</li>
<li><p>创建爬虫project</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> scrapy_demo/</span><br><span class="line">scrapy startproject tutorial</span><br></pre></td></tr></table></figure>
<p> 可以看到，一个简单的爬虫project 已经创建好了,下面是project结构</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">└── tutorial</span><br><span class="line">    ├── scrapy<span class="class">.cfg</span> </span><br><span class="line">    └── tutorial </span><br><span class="line">        ├── __init__<span class="class">.py</span></span><br><span class="line">        ├── items<span class="class">.py</span> #定义抓取项</span><br><span class="line">        ├── pipelines<span class="class">.py</span></span><br><span class="line">        ├── settings<span class="class">.py</span></span><br><span class="line">        └── spiders #定义抓取的范围，例如域名</span><br><span class="line">            └── __init__.py</span><br></pre></td></tr></table></figure>
</li>
<li><p>指定抓取项<br>  修改 items.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TutorialItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">        title = scrapy.Field()</span><br><span class="line">        link = scrapy.Field()</span><br><span class="line">        desc = scrapy.Field()</span><br></pre></td></tr></table></figure>
</li>
<li><p>实现<code>scrapy.Scrapy</code>的子类</p>
<ul>
<li><code>name</code>scrapy的id，唯一性</li>
<li><code>start_urls</code> 定义爬取开始url</li>
</ul>
<p>实现代码如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span><br><span class="line">code is far awayfrom bug with the animal protecting </span><br><span class="line">   ┏┓　　　┏┓</span><br><span class="line"> ┏┛┻━━━┛┻┓</span><br><span class="line"> ┃　　　　　　　┃ 　</span><br><span class="line"> ┃　　　━　　　┃</span><br><span class="line"> ┃　┳┛　┗┳　┃</span><br><span class="line"> ┃　　　　　　　┃</span><br><span class="line"> ┃　　　┻　　　┃</span><br><span class="line"> ┃　　　　　　　┃</span><br><span class="line"> ┗━┓　　　┏━┛</span><br><span class="line"> 　　┃　　　┃神兽保佑</span><br><span class="line"> 　　┃　　　┃代码无BUG！</span><br><span class="line"> 　　┃　　　┗━━━┓</span><br><span class="line"> 　　┃　　　　　　　┣┓</span><br><span class="line"> 　　┃　　　　　　　┏┛</span><br><span class="line"> 　　┗┓┓┏━┳┓┏┛</span><br><span class="line"> 　　　┃┫┫　┃┫┫</span><br><span class="line"> 　　　┗┻┛　┗┻┛</span><br><span class="line">"""</span></span><br><span class="line">__author__ = <span class="string">'box'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DmozSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"dmoz"</span></span><br><span class="line">    allowed_domains = [<span class="string">"dmoz.org"</span>]</span><br><span class="line">    start_urls = [</span><br><span class="line">        <span class="string">"http://www.pengyq.org"</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        filename = response.url.split(<span class="string">"/"</span>)[-<span class="number">2</span>] + <span class="string">'.html'</span></span><br><span class="line">        <span class="keyword">with</span> open(filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(response.body)</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行爬虫<br> 命令行下回到project跟目录下:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tutorial&gt; scrapy crawl dmoz</span><br></pre></td></tr></table></figure>
<p>可以看到，已经爬去到pengyq.org.html的文件。因为，上面的爬虫实现parse 方法是把html 文件写入到磁盘上.</p>
</li>
<li><p>爬去到的内容处理<br>对于爬取到的页面都会通过<code>parse</code>方法的 response参数传入，scrapy也提供了命令行模式去调试response获取到的内容，这里面用到的解析html的技术叫xpath</p>
 <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy shell &#34;http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&#34;</span><br></pre></td></tr></table></figure>
<p>执行上面的命令，可以直接进入ipython命令行模式(前提是提前安装了ipython)<br>下面对response传递的html 内容进行获取测试</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">In [1]: response.xpath(&#39;//title&#39;)&#10;Out[1]: [&#60;Selector xpath=&#39;//title&#39; data=u&#39;&#60;title&#62;Open Directory - Computers: Progr&#39;&#62;]&#10;&#10;In [2]: response.xpath(&#39;//title&#39;).extract()&#10;Out[2]: [u&#39;&#60;title&#62;Open Directory - Computers: Programming: Languages: Python: Books&#60;/title&#62;&#39;]&#10;&#10;In [3]: response.xpath(&#39;//title/text()&#39;)&#10;Out[3]: [&#60;Selector xpath=&#39;//title/text()&#39; data=u&#39;Open Directory - Computers: Programming:&#39;&#62;]&#10;&#10;In [4]: response.xpath(&#39;//title/text()&#39;).extract()&#10;Out[4]: [u&#39;Open Directory - Computers: Programming: Languages: Python: Books&#39;]&#10;&#10;In [5]: response.xpath(&#39;//title/text()&#39;).re(&#39;(\w+):&#39;)&#10;Out[5]: [u&#39;Computers&#39;, u&#39;Programming&#39;, u&#39;Languages&#39;, u&#39;Python&#39;]</span><br></pre></td></tr></table></figure>
<p>穿插一些xpath知识:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取所有ul元素下的li元素列表</span></span><br><span class="line">response.xpath(<span class="string">'//ul/li'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有ul元素下的li元素的text</span></span><br><span class="line">response.xpath(<span class="string">'//ul/li/text()'</span>).extract() </span><br><span class="line"></span><br><span class="line"><span class="comment">#获取ul元素下的li元素 a标签href内容（可以用来获取超链接）</span></span><br><span class="line">response.xpath(<span class="string">'//ul/li/a/@href'</span>).extract()</span><br></pre></td></tr></table></figure>
<p>下面我们把之前的scrapy程序加上对html具体内容的提取:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> tutorial.items <span class="keyword">import</span> TutorialItem</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DmozSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"dmoz"</span></span><br><span class="line">    allowed_domains = [<span class="string">"dmoz.org"</span>]</span><br><span class="line">    start_urls = [</span><br><span class="line">        <span class="string">"http://www.pengyq.org"</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> sel <span class="keyword">in</span> response.xpath(<span class="string">'//ul/li'</span>):</span><br><span class="line">            item = TutorialItem()</span><br><span class="line">            item[<span class="string">'title'</span>] = sel.xpath(<span class="string">'a/text()'</span>).extract()</span><br><span class="line">            item[<span class="string">'link'</span>] = sel.xpath(<span class="string">'a/@href'</span>).extract()</span><br><span class="line">            item[<span class="string">'desc'</span>] = sel.xpath(<span class="string">'text()'</span>).extract()</span><br><span class="line">            <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure>
<p>再次运行爬虫程序:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl dmoz</span><br></pre></td></tr></table></figure>
<p>可以看到已经抓取到了我们想要的内容:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">13</span> <span class="number">15</span>:<span class="number">42</span>:<span class="number">57</span> [scrapy] DEBUG: Crawled (<span class="number">200</span>) &lt;GET http://pengyq.org/&gt; (referer: <span class="keyword">None</span>)</span><br><span class="line">[] [] [<span class="string">u'\u83dc\u5355'</span>]</span><br><span class="line">[] [] [<span class="string">u'\u6807\u7b7e'</span>]</span><br><span class="line">[] [] [<span class="string">u'\u5173\u4e8e\u6211'</span>]</span><br><span class="line">[<span class="string">u'\u4e3b\u9875'</span>] [<span class="string">u'/'</span>] []</span><br><span class="line">[<span class="string">u'\u6240\u6709\u6587\u7ae0'</span>] [<span class="string">u'/archives'</span>] []</span><br><span class="line">[<span class="string">u'\u968f\u7b14'</span>] [<span class="string">u'/tags/\u968f\u7b14'</span>] []</span><br><span class="line">[<span class="string">u'\u4e3b\u9875'</span>] [<span class="string">u'/'</span>] []</span><br><span class="line">[<span class="string">u'\u6240\u6709\u6587\u7ae0'</span>] [<span class="string">u'/archives'</span>] []</span><br><span class="line">[<span class="string">u'\u968f\u7b14'</span>] [<span class="string">u'/tags/\u968f\u7b14'</span>] []</span><br><span class="line">[<span class="string">u'matplotlib'</span>] [<span class="string">u'/tags/matplotlib/'</span>] []</span><br><span class="line">[<span class="string">u'python'</span>] [<span class="string">u'/tags/python/'</span>] []</span><br><span class="line">[] [<span class="string">u'/tags/undefined/'</span>] []</span><br><span class="line">[<span class="string">u' javascript'</span>] [<span class="string">u'/tags/javascript/'</span>] []</span><br><span class="line">[<span class="string">u'css'</span>] [<span class="string">u'/tags/css/'</span>] []</span><br><span class="line">[<span class="string">u'html'</span>] [<span class="string">u'/tags/html/'</span>] []</span><br><span class="line">[<span class="string">u'\u968f\u7b14'</span>] [<span class="string">u'/tags/\u968f\u7b14/'</span>] []</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用item</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> tutorial.items <span class="keyword">import</span> TutorialItem</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DmozSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"dmoz"</span></span><br><span class="line">    allowed_domains = [<span class="string">"dmoz.org"</span>]</span><br><span class="line">    start_urls = [</span><br><span class="line">        <span class="string">"http://www.pengyq.org"</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> sel <span class="keyword">in</span> response.xpath(<span class="string">'//ul/li'</span>):</span><br><span class="line">            item = TutorialItem()</span><br><span class="line">            item[<span class="string">'title'</span>] = sel.xpath(<span class="string">'a/text()'</span>).extract()</span><br><span class="line">            item[<span class="string">'link'</span>] = sel.xpath(<span class="string">'a/@href'</span>).extract()</span><br><span class="line">            item[<span class="string">'desc'</span>] = sel.xpath(<span class="string">'text()'</span>).extract()</span><br><span class="line">            <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure>
<p>可以看到提取出的内容已经封装成item对象（像python的dict）</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">13</span> <span class="number">15</span>:<span class="number">53</span>:<span class="number">42</span> [scrapy] DEBUG: Scraped <span class="keyword">from</span> &lt;<span class="number">200</span> http://pengyq.org/&gt;</span><br><span class="line">&#123;<span class="string">'desc'</span>: [<span class="string">u'\u83dc\u5355'</span>], <span class="string">'link'</span>: [], <span class="string">'title'</span>: []&#125;</span><br><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">13</span> <span class="number">15</span>:<span class="number">53</span>:<span class="number">42</span> [scrapy] DEBUG: Scraped <span class="keyword">from</span> &lt;<span class="number">200</span> http://pengyq.org/&gt;</span><br><span class="line">&#123;<span class="string">'desc'</span>: [<span class="string">u'\u6807\u7b7e'</span>], <span class="string">'link'</span>: [], <span class="string">'title'</span>: []&#125;</span><br><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">13</span> <span class="number">15</span>:<span class="number">53</span>:<span class="number">42</span> [scrapy] DEBUG: Scraped <span class="keyword">from</span> &lt;<span class="number">200</span> http://pengyq.org/&gt;</span><br><span class="line">&#123;<span class="string">'desc'</span>: [<span class="string">u'\u5173\u4e8e\u6211'</span>], <span class="string">'link'</span>: [], <span class="string">'title'</span>: []&#125;</span><br><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">13</span> <span class="number">15</span>:<span class="number">53</span>:<span class="number">42</span> [scrapy] DEBUG: Scraped <span class="keyword">from</span> &lt;<span class="number">200</span> http://pengyq.org/&gt;</span><br><span class="line">&#123;<span class="string">'desc'</span>: [], <span class="string">'link'</span>: [<span class="string">u'/'</span>], <span class="string">'title'</span>: [<span class="string">u'\u4e3b\u9875'</span>]&#125;</span><br><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">13</span> <span class="number">15</span>:<span class="number">53</span>:<span class="number">42</span> [scrapy] DEBUG: Scraped <span class="keyword">from</span> &lt;<span class="number">200</span> http://pengyq.org/&gt;</span><br><span class="line">&#123;<span class="string">'desc'</span>: [], <span class="string">'link'</span>: [<span class="string">u'/archives'</span>], <span class="string">'title'</span>: [<span class="string">u'\u6240\u6709\u6587\u7ae0'</span>]&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>request方法</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_dir_contents</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> sel <span class="keyword">in</span> response.xpath(<span class="string">'//ul/li'</span>):</span><br><span class="line">            item = DmozItem()</span><br><span class="line">            item[<span class="string">'title'</span>] = sel.xpath(<span class="string">'a/text()'</span>).extract()</span><br><span class="line">            item[<span class="string">'link'</span>] = sel.xpath(<span class="string">'a/@href'</span>).extract()</span><br><span class="line">            item[<span class="string">'desc'</span>] = sel.xpath(<span class="string">'text()'</span>).extract()</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line"></span><br><span class="line">scrapy.Request(“http://pengyq.org”, callback=self.parse_dir_contents)</span><br></pre></td></tr></table></figure>
<p>这个方法可以直接获取指定url的内容</p>
</li>
<li><p>存储结果</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl dmoz -o items.json -t json</span><br></pre></td></tr></table></figure>
<p>保存信息的最简单的方法是通过Feed exports，支持的格式有四种：JSON，JSON lines，CSV，XML。<br>我们将结果用最常用的JSON导出</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl dmoz -o items.xml -t xml</span><br></pre></td></tr></table></figure>
<p>存储为xml</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; cat items.xml</span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;items&gt;&lt;item&gt;&lt;desc&gt;&lt;value&gt;菜单&lt;/value&gt;&lt;/desc&gt;&lt;link&gt;&lt;/link&gt;&lt;title&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;value&gt;标签&lt;/value&gt;&lt;/desc&gt;&lt;link&gt;&lt;/link&gt;&lt;title&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;value&gt;关于我&lt;/value&gt;&lt;/desc&gt;&lt;link&gt;&lt;/link&gt;&lt;title&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt;主页&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/archives&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt;所有文章&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/tags/随笔&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt;随笔&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt;主页&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/archives&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt;所有文章&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/tags/随笔&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt;随笔&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/tags/matplotlib/&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt;matplotlib&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/tags/python/&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt;python&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/tags/undefined/&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/tags/javascript/&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt; javascript&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/tags/css/&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt;css&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/tags/html/&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt;html&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;item&gt;&lt;desc&gt;&lt;/desc&gt;&lt;link&gt;&lt;value&gt;/tags/随笔/&lt;/value&gt;&lt;/link&gt;&lt;title&gt;&lt;value&gt;随笔&lt;/value&gt;&lt;/title&gt;&lt;/item&gt;&lt;/items&gt;</span><br><span class="line"></span><br><span class="line">&gt; /tutorial$ cat items.json</span><br><span class="line">[&#123;<span class="string">"title"</span>: [], <span class="string">"link"</span>: [], <span class="string">"desc"</span>: [<span class="string">"\u83dc\u5355"</span>]&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [], <span class="string">"link"</span>: [], <span class="string">"desc"</span>: [<span class="string">"\u6807\u7b7e"</span>]&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [], <span class="string">"link"</span>: [], <span class="string">"desc"</span>: [<span class="string">"\u5173\u4e8e\u6211"</span>]&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">"\u4e3b\u9875"</span>], <span class="string">"link"</span>: [<span class="string">"/"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">"\u6240\u6709\u6587\u7ae0"</span>], <span class="string">"link"</span>: [<span class="string">"/archives"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">"\u968f\u7b14"</span>], <span class="string">"link"</span>: [<span class="string">"/tags/\u968f\u7b14"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">"\u4e3b\u9875"</span>], <span class="string">"link"</span>: [<span class="string">"/"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">"\u6240\u6709\u6587\u7ae0"</span>], <span class="string">"link"</span>: [<span class="string">"/archives"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">"\u968f\u7b14"</span>], <span class="string">"link"</span>: [<span class="string">"/tags/\u968f\u7b14"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">"matplotlib"</span>], <span class="string">"link"</span>: [<span class="string">"/tags/matplotlib/"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">"python"</span>], <span class="string">"link"</span>: [<span class="string">"/tags/python/"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [], <span class="string">"link"</span>: [<span class="string">"/tags/undefined/"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">" javascript"</span>], <span class="string">"link"</span>: [<span class="string">"/tags/javascript/"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">"css"</span>], <span class="string">"link"</span>: [<span class="string">"/tags/css/"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">"html"</span>], <span class="string">"link"</span>: [<span class="string">"/tags/html/"</span>], <span class="string">"desc"</span>: []&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: [<span class="string">"\u968f\u7b14"</span>], <span class="string">"link"</span>: [<span class="string">"/tags/\u968f\u7b14/"</span>], <span class="string">"desc"</span>: []&#125;]</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="u53C2_u8003_u6587_u732E"><a href="#u53C2_u8003_u6587_u732E" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="http://doc.scrapy.org/en/latest/intro/tutorial.html" target="_blank" rel="external">http://doc.scrapy.org/en/latest/intro/tutorial.html</a></p>
<hr>
<h4 id="u5FAE_u4FE1_u626B_u4E0B_u9762_u7684_u4E8C_u7EF4_u7801_u83B7_u53D6_u66F4_u591A_u5E72_u8D27"><a href="#u5FAE_u4FE1_u626B_u4E0B_u9762_u7684_u4E8C_u7EF4_u7801_u83B7_u53D6_u66F4_u591A_u5E72_u8D27" class="headerlink" title="微信扫下面的二维码获取更多干货"></a>微信扫下面的二维码获取更多干货</h4><p><img src="http://7xp4nl.com1.z0.glb.clouddn.com/qrcode_for_gh_217533791e24_1280.jpg?imageView2/1/w/200/h/200/q/100" alt=""><br>微信搜索 databox</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python 制作logo]]></title>
      <url>http://pengyq.org/2015/12/12/python-%E5%88%B6%E4%BD%9Clogo/</url>
      <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">6</span>,<span class="number">6</span>))</span><br><span class="line">ax = plt.axes([<span class="number">0.025</span>,<span class="number">0.025</span>,<span class="number">0.95</span>,<span class="number">0.95</span>], polar=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">N = <span class="number">20</span></span><br><span class="line">theta = np.arange(<span class="number">0.0</span>, <span class="number">2</span>*np.pi, <span class="number">2</span>*np.pi/N)</span><br><span class="line">radii = <span class="number">10</span>*np.random.rand(N)</span><br><span class="line">width = np.pi/<span class="number">4</span>*np.random.rand(N)</span><br><span class="line">bars = plt.bar(theta, radii, width=width, bottom=<span class="number">0.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> r,bar <span class="keyword">in</span> zip(radii, bars):</span><br><span class="line">    bar.set_facecolor( plt.cm.jet(r/<span class="number">10.</span>))</span><br><span class="line">    bar.set_alpha(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">ax.set_xticklabels([])</span><br><span class="line">ax.set_yticklabels([])</span><br><span class="line"></span><br><span class="line">eqs = []</span><br><span class="line">eqs.append((<span class="string">r"$W^&#123;3\beta&#125;_&#123;\delta_1 \rho_1 \sigma_2&#125; = U^&#123;3\beta&#125;_&#123;\delta_1 \rho_1&#125; + \frac&#123;1&#125;&#123;8 \pi 2&#125; \int^&#123;\alpha_2&#125;_&#123;\alpha_2&#125; d \alpha^\prime_2 \left[\frac&#123; U^&#123;2\beta&#125;_&#123;\delta_1 \rho_1&#125; - \alpha^\prime_2U^&#123;1\beta&#125;_&#123;\rho_1 \sigma_2&#125; &#125;&#123;U^&#123;0\beta&#125;_&#123;\rho_1 \sigma_2&#125;&#125;\right]$"</span>))</span><br><span class="line">eqs.append((<span class="string">r"$\frac&#123;d\rho&#125;&#123;d t&#125; + \rho \vec&#123;v&#125;\cdot\nabla\vec&#123;v&#125; = -\nabla p + \mu\nabla^2 \vec&#123;v&#125; + \rho \vec&#123;g&#125;$"</span>))</span><br><span class="line">eqs.append((<span class="string">r"$\int_&#123;-\infty&#125;^\infty e^&#123;-x^2&#125;dx=\sqrt&#123;\pi&#125;$"</span>))</span><br><span class="line">eqs.append((<span class="string">r"$E = mc^2 = \sqrt&#123;&#123;m_0&#125;^2c^4 + p^2c^2&#125;$"</span>))</span><br><span class="line">eqs.append((<span class="string">r"$F_G = G\frac&#123;m_1m_2&#125;&#123;r^2&#125;$"</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.axes([<span class="number">0.025</span>,<span class="number">0.025</span>,<span class="number">0.95</span>,<span class="number">0.95</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">24</span>):</span><br><span class="line">    index = np.random.randint(<span class="number">0</span>,len(eqs))</span><br><span class="line">    eq = eqs[index]</span><br><span class="line">    size = np.random.uniform(<span class="number">12</span>,<span class="number">32</span>)</span><br><span class="line">    x,y = np.random.uniform(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">    alpha = np.random.uniform(<span class="number">0.15</span>,<span class="number">.60</span>)</span><br><span class="line">    plt.text(x, y, eq, ha=<span class="string">'center'</span>, va=<span class="string">'center'</span>, color=<span class="string">"#11557c"</span>, alpha=alpha,</span><br><span class="line">             transform=plt.gca().transAxes, fontsize=size, clip_on=<span class="keyword">True</span>)</span><br><span class="line">plt.text(<span class="number">0.23</span>,<span class="number">0.6</span>,<span class="string">'databox'</span>,fontsize=<span class="number">58</span>,color=<span class="string">"#4a86e8"</span>,alpha=<span class="number">0.95</span>)</span><br><span class="line">plt.xticks([]), plt.yticks([])</span><br><span class="line"><span class="comment">#savefig('databox.png',dpi=48)</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="http://7xp4nl.com1.z0.glb.clouddn.com/databox.jpg?imageView2/2/w/350/h/350/q/90|watermark/2/text/cGVuZ3lxLm9yZw==/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/South/dy/10" alt=""><br>以上是摘要<br><a id="more"></a><br>以下是余下全文</p>
<hr>
<h4 id="u5FAE_u4FE1_u626B_u4E0B_u9762_u7684_u4E8C_u7EF4_u7801_u83B7_u53D6_u66F4_u591A_u5E72_u8D27"><a href="#u5FAE_u4FE1_u626B_u4E0B_u9762_u7684_u4E8C_u7EF4_u7801_u83B7_u53D6_u66F4_u591A_u5E72_u8D27" class="headerlink" title="微信扫下面的二维码获取更多干货"></a>微信扫下面的二维码获取更多干货</h4><p><img src="http://7xp4nl.com1.z0.glb.clouddn.com/qrcode_for_gh_217533791e24_1280.jpg?imageView2/1/w/200/h/200/q/100" alt=""><br>微信搜索 databox</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[html 垂直居中]]></title>
      <url>http://pengyq.org/2015/12/12/%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/</url>
      <content type="html"><![CDATA[<ol>
<li>js设置lineHeight为父容器的高度</li>
<li>浏览器窗口大小变化后重新设置高度</li>
</ol>
<hr>
<h3 id="u4EE3_u7801_u5982_u4E0B"><a href="#u4EE3_u7801_u5982_u4E0B" class="headerlink" title="代码如下"></a>代码如下</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line"><span class="tag">body</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="id">#welcome</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">float</span>:<span class="value">right</span></span>;<span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">100%</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> white</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">60px</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"welcome"</span>&gt;</span></span><br><span class="line">       WELCOME</span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    resize();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.onresize=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    resize();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">resize</span>(<span class="params"></span>)</span><br><span class="line"></span>&#123;</span><br><span class="line">   <span class="keyword">var</span> o=<span class="built_in">document</span>.getElementById(<span class="string">'welcome'</span>);</span><br><span class="line">    o.style.height=<span class="built_in">document</span>.body.clientHeight+<span class="string">"px"</span>;</span><br><span class="line">    o.style.lineHeight=<span class="built_in">document</span>.body.clientHeight+<span class="string">"px"</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于box]]></title>
      <url>http://pengyq.org/2015/11/10/about_box/</url>
      <content type="html"><![CDATA[<p>擅长数据分析，大数据平台架构，数据库，Java Web，Python，数据挖掘爱好者</p>
]]></content>
    </entry>
    
  
  
</search>
